{"ast":null,"code":"var _jsxFileName = \"/home/piriya/Desktop/Project/monster/React-Practice/src/App.js\";\nimport { Component } from 'react';\nimport CardList from './components/card-lists/card-list.component';\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.onSearchChange = event => {\n      const searchField = event.target.value.toLowerCase();\n      this.setState(() => {\n        return {\n          searchField\n        };\n      });\n    };\n    console.log('constructor');\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  // This life cycle run when the first time coponent reder on the page\n  componentDidMount() {\n    console.log('componentDidMount');\n    fetch('http://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState(() => {\n      return {\n        monsters: users\n      };\n    }, () => {\n      console.log(this.state);\n    }));\n  }\n  render() {\n    console.log('render');\n    const {\n      monsters,\n      searchField\n    } = this.state;\n    const {\n      onSearchChange\n    } = this;\n    const filterredMonsters = monsters.filter(monster => {\n      return monster.name.toLowerCase().includes(searchField);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-box\",\n        type: \"search\",\n        placeholder: \"search monsters\",\n        onChange: onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        monsters: 'I am the monster'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","CardList","logo","App","constructor","onSearchChange","event","searchField","target","value","toLowerCase","setState","console","log","state","monsters","componentDidMount","fetch","then","response","json","users","render","filterredMonsters","filter","monster","name","includes"],"sources":["/home/piriya/Desktop/Project/monster/React-Practice/src/App.js"],"sourcesContent":["import { Component } from 'react'\n\nimport CardList from './components/card-lists/card-list.component';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    console.log('constructor')\n    this.state = {\n      monsters : [],\n      searchField: ''\n    };\n  }\n\n  // This life cycle run when the first time coponent reder on the page\n  componentDidMount() {\n\n    console.log('componentDidMount')\n\n    fetch('http://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState(\n        ()=>{\n          return {monsters: users}\n        },\n        () => {\n          console.log(this.state)\n        }\n      ))\n  }\n\n  onSearchChange = (event) => {\n    const  searchField = event.target.value.toLowerCase();\n    this.setState(()=> {\n      return { searchField }\n    });\n  }\n\n  render() {\n    console.log('render')\n    \n    const { monsters, searchField } = this.state;\n    const { onSearchChange } = this\n\n    const filterredMonsters = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchField)\n    });\n\n    \n\n    return (\n      <div className=\"App\">\n        <input className='search-box' type='search' placeholder='search monsters' onChange={ onSearchChange }/>\n       {/* {\n        filterredMonsters.map((monster) => {\n          return (\n            <div key={monster.id}>\n              <h1>{ monster.name }</h1>\n            </div>\n          );\n        })\n       } */}\n       <CardList monsters={'I am the monster'}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,OAAOC,QAAQ,MAAM,6CAA6C;AAClE,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAAC;AAEnB,MAAMC,GAAG,SAASH,SAAS,CAAC;EAE1BI,WAAW,GAAG;IACZ,KAAK,EAAE;IAAC,KA0BVC,cAAc,GAAIC,KAAK,IAAK;MAC1B,MAAOC,WAAW,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,WAAW,EAAE;MACrD,IAAI,CAACC,QAAQ,CAAC,MAAK;QACjB,OAAO;UAAEJ;QAAY,CAAC;MACxB,CAAC,CAAC;IACJ,CAAC;IA7BCK,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAG,EAAE;MACbR,WAAW,EAAE;IACf,CAAC;EACH;;EAEA;EACAS,iBAAiB,GAAG;IAElBJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAEhCI,KAAK,CAAC,2CAA2C,CAAC,CAC/CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAK,IAAI,CAACV,QAAQ,CAC5B,MAAI;MACF,OAAO;QAACI,QAAQ,EAAEM;MAAK,CAAC;IAC1B,CAAC,EACD,MAAM;MACJT,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,KAAK,CAAC;IACzB,CAAC,CACF,CAAC;EACN;EASAQ,MAAM,GAAG;IACPV,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IAErB,MAAM;MAAEE,QAAQ;MAAER;IAAY,CAAC,GAAG,IAAI,CAACO,KAAK;IAC5C,MAAM;MAAET;IAAe,CAAC,GAAG,IAAI;IAE/B,MAAMkB,iBAAiB,GAAGR,QAAQ,CAACS,MAAM,CAAEC,OAAO,IAAK;MACrD,OAAOA,OAAO,CAACC,IAAI,CAAChB,WAAW,EAAE,CAACiB,QAAQ,CAACpB,WAAW,CAAC;IACzD,CAAC,CAAC;IAIF,oBACE;MAAK,SAAS,EAAC,KAAK;MAAA,wBAClB;QAAO,SAAS,EAAC,YAAY;QAAC,IAAI,EAAC,QAAQ;QAAC,WAAW,EAAC,iBAAiB;QAAC,QAAQ,EAAGF;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAE,eAUxG,QAAC,QAAQ;QAAC,QAAQ,EAAE;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACpC;EAEV;AACF;AAEA,eAAeF,GAAG"},"metadata":{},"sourceType":"module"}