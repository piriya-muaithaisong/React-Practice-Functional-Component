{"ast":null,"code":"var _jsxFileName = \"/home/piriya/Desktop/Project/monster/React-Practice/src/App.js\";\nimport { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    console.log('constructor');\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  // This life cycle run when the first time coponent reder on the page\n  componentDidMount() {\n    console.log('componentDidMount');\n    fetch('http://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState(() => {\n      return {\n        monsters: users\n      };\n    }, () => {\n      console.log(this.state);\n    }));\n  }\n  render() {\n    const filterredMonsters = this.state.monsters.filter(monster => {\n      return monster.name.toLowerCase().includes(this.state.searchField);\n    });\n    console.log('render');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-box\",\n        type: \"search\",\n        placeholder: \"search monsters\",\n        onChange: event => {\n          const searchField = event.target.value.toLowerCase();\n          this.setState(() => {\n            return {\n              searchField\n            };\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), this.state.filterredMonsters.map(monster => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: monster.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","logo","App","constructor","console","log","state","monsters","searchField","componentDidMount","fetch","then","response","json","users","setState","render","filterredMonsters","filter","monster","name","toLowerCase","includes","event","target","value","map","id"],"sources":["/home/piriya/Desktop/Project/monster/React-Practice/src/App.js"],"sourcesContent":["import { Component } from 'react'\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    console.log('constructor')\n    this.state = {\n      monsters : [],\n      searchField: ''\n    };\n  }\n\n  // This life cycle run when the first time coponent reder on the page\n  componentDidMount() {\n\n    console.log('componentDidMount')\n\n    fetch('http://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState(\n        ()=>{\n          return {monsters: users}\n        },\n        () => {\n          console.log(this.state)\n        }\n      ))\n  }\n\n  render() {\n\n    const filterredMonsters = this.state.monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(this.state.searchField)\n    });\n\n    console.log('render')\n\n    return (\n      <div className=\"App\">\n        <input className='search-box' type='search' placeholder='search monsters' onChange={(event)=>{\n          const  searchField = event.target.value.toLowerCase();\n          this.setState(()=> {\n            return { searchField }\n          })\n            \n        }}/>\n       {\n        this.state.filterredMonsters.map((monster) => {\n          return (\n            <div key={monster.id}>\n              <h1>{ monster.name }</h1>\n            </div>\n          );\n        })\n       }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAAC;AAEnB,MAAMC,GAAG,SAASF,SAAS,CAAC;EAE1BG,WAAW,GAAG;IACZ,KAAK,EAAE;IAEPC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAG,EAAE;MACbC,WAAW,EAAE;IACf,CAAC;EACH;;EAEA;EACAC,iBAAiB,GAAG;IAElBL,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAEhCK,KAAK,CAAC,2CAA2C,CAAC,CAC/CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAK,IAAI,CAACC,QAAQ,CAC5B,MAAI;MACF,OAAO;QAACR,QAAQ,EAAEO;MAAK,CAAC;IAC1B,CAAC,EACD,MAAM;MACJV,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,KAAK,CAAC;IACzB,CAAC,CACF,CAAC;EACN;EAEAU,MAAM,GAAG;IAEP,MAAMC,iBAAiB,GAAG,IAAI,CAACX,KAAK,CAACC,QAAQ,CAACW,MAAM,CAAEC,OAAO,IAAK;MAChE,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAAChB,KAAK,CAACE,WAAW,CAAC;IACpE,CAAC,CAAC;IAEFJ,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IAErB,oBACE;MAAK,SAAS,EAAC,KAAK;MAAA,wBAClB;QAAO,SAAS,EAAC,YAAY;QAAC,IAAI,EAAC,QAAQ;QAAC,WAAW,EAAC,iBAAiB;QAAC,QAAQ,EAAGkB,KAAK,IAAG;UAC3F,MAAOf,WAAW,GAAGe,KAAK,CAACC,MAAM,CAACC,KAAK,CAACJ,WAAW,EAAE;UACrD,IAAI,CAACN,QAAQ,CAAC,MAAK;YACjB,OAAO;cAAEP;YAAY,CAAC;UACxB,CAAC,CAAC;QAEJ;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,EAEJ,IAAI,CAACF,KAAK,CAACW,iBAAiB,CAACS,GAAG,CAAEP,OAAO,IAAK;QAC5C,oBACE;UAAA,uBACE;YAAA,UAAMA,OAAO,CAACC;UAAI;YAAA;YAAA;YAAA;UAAA;QAAO,GADjBD,OAAO,CAACQ,EAAE;UAAA;UAAA;UAAA;QAAA,QAEd;MAEV,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAEE;EAEV;AACF;AAEA,eAAezB,GAAG"},"metadata":{},"sourceType":"module"}